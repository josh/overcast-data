name: Squash

on: workflow_dispatch

concurrency:
  group: overcast

permissions:
  contents: write

jobs:
  squash:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout data branch
        uses: actions/checkout@v4
        with:
          ref: "data"
          fetch-depth: 0

      - name: Get commit info
        id: commit
        run: |
          set -o pipefail
          echo "message=$(git log -1 --pretty=%B)" | tee -a $GITHUB_OUTPUT
          echo "author_name=$(git log -1 --pretty=%an)" | tee -a $GITHUB_OUTPUT
          echo "author_email=$(git log -1 --pretty=%ae)" | tee -a $GITHUB_OUTPUT
          echo "committer_name=$(git log -1 --pretty=%cn)" | tee -a $GITHUB_OUTPUT
          echo "committer_email=$(git log -1 --pretty=%ce)" | tee -a $GITHUB_OUTPUT
          echo "timestamp=$(git log -1 --pretty=%ad --date=iso)" | tee -a $GITHUB_OUTPUT

      - name: Get tree sha
        id: tree
        run: |
          set -o pipefail
          (echo -n "sha="; git write-tree) | tee -a $GITHUB_OUTPUT

      - name: Create squashed commit
        id: new-commit
        run: |
          set -o pipefail
          (
            echo -n "sha="
            git commit-tree "${{ steps.tree.outputs.sha }}" -m "${{ steps.commit.outputs.message }}"
          ) | tee -a $GITHUB_OUTPUT
        env:
          GIT_AUTHOR_NAME: ${{ steps.commit.outputs.author_name }}
          GIT_AUTHOR_EMAIL: ${{ steps.commit.outputs.author_email }}
          GIT_AUTHOR_DATE: ${{ steps.commit.outputs.timestamp }}
          GIT_COMMITTER_NAME: ${{ steps.commit.outputs.committer_name }}
          GIT_COMMITTER_EMAIL: ${{ steps.commit.outputs.committer_email }}
          GIT_COMMITTER_DATE: ${{ steps.commit.outputs.timestamp }}

      - name: Update data branch
        run: |
          git update-ref refs/heads/data "${{ steps.new-commit.outputs.sha }}"

      - name: Push changes
        if: steps.new-commit.outputs.sha != ''
        run: |
          git push --force origin data
